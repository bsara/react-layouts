.grid-layout {
  display: grid;

  grid-template-columns: var(--columns-template, repeat(
                           var(--column-count, 0),
                           minmax(
                             var(--item-min-width, var(--item-min-size, 0)),
                             var(--item-width, var(--item-size, var(--item-max-width, var(--item-max-size, 1fr))))
                           )
                         ));
  grid-template-rows:  var(--rows-template, repeat(
                         var(--row-count, 0),
                         minmax(
                           var(--item-min-height, var(--item-min-size, 0)),
                           var(--item-height,  var(--item-size, var(--item-max-height, var(--item-max-size, 1fr))))
                         )
                       ));
  grid-template-areas: var(--areas-template);
  grid-gap:            var(--item-gap);
}



.grid-layout > * {
  grid-row:    var(--row,    var(--area, (span var(--row-span, 1))));
  grid-column: var(--column, var(--area, (span var(--column-span, 1))));
  grid-area:   var(--area);
  box-sizing:  border-box;
}



/* Reset layout children custom props in case child is special layout */
.grid-layout > * {
  --rows-template:    initial;
  --columns-template: initial;
  --areas-template:   initial;

  --row-count:    initial;
  --column-count: initial;

  --item-gap: initial;
}

/* Reset layout grandchildren custom props in case child is special layout */
.grid-layout > * > * {
  --row:    initial;
  --column: initial;
  --area:   initial;

  --row-span:    initial;
  --column-span: initial;

  --item-size:     initial;
  --item-min-size: initial;
  --item-max-size: initial;

  --item-width:     initial;
  --item-min-width: initial;
  --item-max-width: initial;

  --item-height:     initial;
  --item-min-height: initial;
  --item-max-height: initial;
}
