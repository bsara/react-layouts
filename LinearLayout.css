.react-layouts-linear-layout {
  display:         flex;
  flex-wrap:       nowrap;
  justify-content: var(--item-alignment, flex-start);
}



.react-layouts-linear-layout > * {
  flex-grow:   var(--stretch-items, 0);
  flex-shrink: var(--shrink-items, 0);
  flex-basis:  var(--stretch-basis);
  box-sizing:  border-box;
}



.react-layouts-linear-layout.react-layouts-horizontal {
  flex-direction: row;
}

.react-layouts-linear-layout.react-layouts-horizontal > * {
  width:     var(--item-size);
  min-width: var(--item-min-size);
  max-width: var(--item-max-size);
}

.react-layouts-linear-layout.react-layouts-horizontal > *:not(:first-child) {
  margin-left: calc(var(--item-gap) / 2);
}

.react-layouts-linear-layout.react-layouts-horizontal > *:not(:last-child) {
  margin-right: calc(var(--item-gap) / 2);
  border-right: var(--item-separator, none);
}



.react-layouts-linear-layout.react-layouts-vertical {
  flex-direction: column;
}

.react-layouts-linear-layout.react-layouts-vertical > * {
  height:     var(--item-size);
  min-height: var(--item-min-size);
  max-height: var(--item-max-size);
}

.react-layouts-linear-layout.react-layouts-vertical > *:not(:first-child) {
  margin-top: calc(var(--item-gap) / 2);
}

.react-layouts-linear-layout.react-layouts-vertical > *:not(:last-child) {
  margin-bottom: calc(var(--item-gap) / 2);
  border-bottom: var(--item-separator, none);
}



/* Reset layout children custom props in case child is special layout */
.react-layouts-linear-layout > * {
  --item-alignment: initial;
}

/* Reset layout grandchildren custom props in case child is special layout */
.react-layouts-linear-layout > * > * {
  --stretch-items: initial;
  --shrink-items:  initial;
  --stretch-basis: initial;

  --item-gap:       initial;
  --item-separator: initial;

  --item-size:     initial;
  --item-min-size: initial;
  --item-max-size: initial;
}
