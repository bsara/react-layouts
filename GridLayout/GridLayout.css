/**
 * ISC License (ISC)
 *
 * Copyright (c) 2017, Brandon D. Sara (https://bsara.pro/)
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
 * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
 * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
 * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
 * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 */
.rl-aef45beb {
  display: grid;

  grid-template-columns: var(--columns-template, repeat(
                           var(--column-count, 0),
                           minmax(
                             var(--item-min-width, var(--item-min-size, 0)),
                             var(--item-width, var(--item-size, var(--item-max-width, var(--item-max-size, 1fr))))
                           )
                         ));
  grid-template-rows:  var(--rows-template, repeat(
                         var(--row-count, 0),
                         minmax(
                           var(--item-min-height, var(--item-min-size, 0)),
                           var(--item-height, var(--item-size, var(--item-max-height, var(--item-max-size, 1fr))))
                         )
                       ));
  grid-template-areas: var(--areas-template);
  grid-gap:            var(--item-gap)
}
.rl-aef45beb > * {
  grid-row:    var(--row, var(--area, (span var(--row-span, 1))));
  grid-column: var(--column, var(--area, (span var(--column-span, 1))));
  grid-area:   var(--area);
  -webkit-box-sizing:  border-box;
          box-sizing:  border-box;
}
.rl-aef45beb > * {/*Reset layout children custom props in case child is special layout
 */
  --rows-template:    initial;
  --columns-template: initial;
  --areas-template:   initial;
  --row-count:    initial;
  --column-count: initial;
  --item-gap: initial
}
.rl-aef45beb > * > * {/*Reset layout grandchildren custom props in case child is special layout
 */
  --row:    initial;
  --column: initial;
  --area:   initial;
  --row-span:    initial;
  --column-span: initial;
  --item-size:     initial;
  --item-min-size: initial;
  --item-max-size: initial;
  --item-width:     initial;
  --item-min-width: initial;
  --item-max-width: initial;
  --item-height:     initial;
  --item-min-height: initial;
  --item-max-height: initial;
}

/*# sourceMappingURL=GridLayout.css.map */